"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@kinde-oss+kinde-auth-nextjs@1.8.18_react-dom@18.2.0_react@18.2.0";
exports.ids = ["vendor-chunks/@kinde-oss+kinde-auth-nextjs@1.8.18_react-dom@18.2.0_react@18.2.0"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@kinde-oss+kinde-auth-nextjs@1.8.18_react-dom@18.2.0_react@18.2.0/node_modules/@kinde-oss/kinde-auth-nextjs/dist/server/cjs/index.js":
/*!*****************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@kinde-oss+kinde-auth-nextjs@1.8.18_react-dom@18.2.0_react@18.2.0/node_modules/@kinde-oss/kinde-auth-nextjs/dist/server/cjs/index.js ***!
  \*****************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nconst NextResponse = (__webpack_require__(/*! next/dist/server/web/spec-extension/response */ \"(rsc)/./node_modules/.pnpm/next@13.5.2_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/web/spec-extension/response.js\").NextResponse);\nObject.defineProperty(exports, \"__esModule\", ({\n    value: !0\n}));\nvar e = __webpack_require__(/*! next/navigation */ \"(rsc)/./node_modules/.pnpm/next@13.5.2_react-dom@18.2.0_react@18.2.0/node_modules/next/navigation.js\"), t = __webpack_require__(/*! crypto-js */ \"(rsc)/./node_modules/.pnpm/crypto-js@4.1.1/node_modules/crypto-js/index.js\"), r = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/.pnpm/next@13.5.2_react-dom@18.2.0_react@18.2.0/node_modules/next/headers.js\"), o = __webpack_require__(/*! jwt-decode */ \"(rsc)/./node_modules/.pnpm/jwt-decode@3.1.2/node_modules/jwt-decode/build/jwt-decode.cjs.js\"), s = __webpack_require__(/*! react */ \"(rsc)/./node_modules/.pnpm/next@13.5.2_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react.js\");\nfunction c(e) {\n    return e && \"object\" == typeof e && \"default\" in e ? e : {\n        default: e\n    };\n}\nvar i = c(o), a = c(s);\nconst l = process.env.KINDE_SITE_URL, u = process.env.NEXT_PUBLIC_KINDE_AUTH_API_PATH || process.env.KINDE_AUTH_API_PATH || \"/api/auth\", d = process.env.KINDE_POST_LOGIN_REDIRECT_URL || process.env.KINDE_POST_LOGIN_URL_REDIRECT_URL, g = process.env.KINDE_POST_LOGOUT_REDIRECT_URL, _ = {\n    apiPath: u,\n    initialState: {\n        user: null,\n        isLoading: !0,\n        checkSession: null\n    },\n    SESSION_PREFIX: \"pkce-verifier\",\n    redirectURL: l,\n    postLoginRedirectURL: d,\n    issuerURL: process.env.KINDE_ISSUER_URL,\n    clientID: process.env.KINDE_CLIENT_ID,\n    clientSecret: process.env.KINDE_CLIENT_SECRET,\n    postLogoutRedirectURL: g,\n    audience: process.env.KINDE_AUDIENCE,\n    responseType: \"code\",\n    scope: \"openid profile email offline\",\n    codeChallengeMethod: \"S256\",\n    redirectRoutes: {\n        callback: `${u}/kinde_callback`\n    },\n    issuerRoutes: {\n        logout: \"/logout\",\n        login: \"/oauth2/auth\",\n        register: \"/oauth2/auth\",\n        token: \"/oauth2/token\",\n        profile: \"/oauth2/v2/user_profile\"\n    }\n};\nconst p = __webpack_require__(/*! crypto */ \"crypto\"), h = ()=>p.randomBytes(28).toString(\"hex\");\nfunction R() {\n    const e = h(), r = function(e) {\n        return t.SHA256(e).toString(t.enc.Base64url);\n    }(e);\n    return {\n        code_verifier: e,\n        code_challenge: r\n    };\n}\nconst f = (e, t = \"login\")=>{\n    const { code_challenge: o, code_verifier: n, state: s } = ((e, t)=>{\n        const r = h(), { code_challenge: o, code_verifier: n } = R();\n        return {\n            state: r,\n            code_challenge: o,\n            code_verifier: n\n        };\n    })();\n    return ((e, t)=>{\n        r.cookies().set({\n            name: `${_.SESSION_PREFIX}-${e}`,\n            value: t,\n            httpOnly: !0,\n            path: \"/\",\n            maxAge: 900\n        });\n    })(s, n), e.state = s, e.code_challenge = o, function(e, t = \"login\") {\n        const { org_code: r, is_create_org: o, org_name: n = \"\" } = e, s = new URL(_.issuerURL + _.issuerRoutes[t]);\n        let c = {\n            redirect_uri: _.redirectURL + _.redirectRoutes.callback,\n            client_id: _.clientID,\n            response_type: _.responseType,\n            scope: _.scope,\n            code_challenge: e.code_challenge,\n            code_challenge_method: _.codeChallengeMethod,\n            state: e.state,\n            start_page: \"register\" === t ? \"registration\" : \"login\"\n        };\n        return r && (c.org_code = r), o && (c.is_create_org = o, c.org_name = n), _.audience && (c.audience = _.audience), s.search = new URLSearchParams(c), s;\n    }(e, t).href;\n}, L = {\n    create_org: async (t)=>{\n        const r = t.nextUrl.searchParams.get(\"org_name\"), o = f({\n            org_name: r,\n            is_create_org: !0\n        }, \"register\");\n        e.redirect(o);\n    },\n    register: async (t)=>{\n        const r = t.nextUrl.searchParams.get(\"org_code\"), o = f({\n            org_code: r\n        }, \"register\");\n        e.redirect(o);\n    },\n    login: async (t)=>{\n        const r = t.nextUrl.searchParams.get(\"org_code\"), o = f({\n            org_code: r\n        });\n        e.redirect(o);\n    },\n    logout: async (t)=>{\n        r.cookies(), r.cookies().set({\n            name: \"kinde_token\",\n            value: \"\",\n            httpOnly: !0,\n            expires: new Date(0),\n            sameSite: \"lax\",\n            secure: \"https:\" == _.redirectURL.substring(0, 6),\n            path: \"/\"\n        });\n        const o = new URL(_.issuerURL + _.issuerRoutes.logout);\n        o.searchParams.set(\"redirect\", _.postLogoutRedirectURL || \"\"), e.redirect(o.href);\n    },\n    kinde_callback: async (t)=>{\n        const o = t.nextUrl.searchParams.get(\"code\"), n = t.nextUrl.searchParams.get(\"state\"), s = r.cookies().get(`${_.SESSION_PREFIX}-${n}`);\n        if (s) {\n            try {\n                const e = await fetch(_.issuerURL + _.issuerRoutes.token, {\n                    method: \"POST\",\n                    headers: new Headers({\n                        \"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n                        \"Kinde-SDK\": '\"NextJS\"/1.8.18'\n                    }),\n                    body: new URLSearchParams({\n                        client_id: _.clientID,\n                        client_secret: _.clientSecret,\n                        code: o,\n                        code_verifier: s.value,\n                        grant_type: \"authorization_code\",\n                        redirect_uri: `${_.redirectURL}${_.redirectRoutes.callback}`\n                    })\n                }), t = await e.json(), n = i.default(t.access_token, {\n                    header: !0\n                }), c = i.default(t.access_token);\n                let a = !0;\n                _.audience && (a = c.aud === _.audience), c.iss === _.issuerURL && \"RS256\" === n.alg && c.exp > Math.floor(Date.now() / 1e3) && a ? r.cookies().set({\n                    name: \"kinde_token\",\n                    value: JSON.stringify(t),\n                    httpOnly: !0,\n                    expires: new Date(1e3 * c.exp),\n                    sameSite: \"lax\",\n                    secure: \"https:\" == _.redirectURL.substring(0, 6),\n                    path: \"/\"\n                }) : console.error(\"One or more of the claims were not verified.\");\n            } catch (e) {\n                console.error({\n                    err: e\n                });\n            }\n            const t = _.postLoginRedirectURL ? _.postLoginRedirectURL : _.redirectURL;\n            e.redirect(t);\n        } else {\n            const t = new URL(_.issuerURL + _.issuerRoutes.logout);\n            t.searchParams.set(\"redirect\", _.postLogoutRedirectURL), e.redirect(t.href);\n        }\n    }\n};\nconst U = (e)=>{\n    const t = r.cookies().get(\"kinde_token\");\n    if (t) {\n        return i.default(JSON.parse(t.value).access_token);\n    }\n    return {\n        message: \"There is no kinde_token, you are not authenticated. Try logging in.\"\n    };\n}, m = (e)=>{\n    const t = r.cookies().get(\"kinde_token\");\n    if (t) {\n        return i.default(JSON.parse(t.value).id_token);\n    }\n}, v = (e)=>{\n    const t = U();\n    return t ? t[e] : null;\n}, k = {\n    s: \"string\",\n    i: \"integer\",\n    b: \"boolean\"\n}, S = (e, t, r)=>{\n    const o = v(\"feature_flags\"), n = o && o[e] ? o[e] : {};\n    if (n == {} && null == t) throw Error(`Flag ${e} was not found, and no default value has been provided`);\n    if (r && n.t && r !== n.t) throw Error(`Flag ${e} is of type ${k[n.t]} - requested type ${k[r]}`);\n    return {\n        code: e,\n        type: k[n.t || r],\n        value: null == n.v ? t : n.v,\n        is_default: null == n.v\n    };\n}, E = (e)=>{\n    const t = m();\n    return t ? {\n        id: t.sub,\n        given_name: t.given_name,\n        family_name: t.family_name,\n        email: t.email,\n        picture: t.picture\n    } : void 0;\n};\nvar y = Object.freeze({\n    __proto__: null,\n    getAccessToken: U,\n    getBooleanFlag: (e, t)=>{\n        try {\n            return S(e, t, \"b\").value;\n        } catch (e) {\n            console.error(e);\n        }\n    },\n    getFlag: S,\n    getIdToken: m,\n    getIntegerFlag: (e, t)=>{\n        try {\n            return S(e, t, \"i\").value;\n        } catch (e) {\n            console.error(e);\n        }\n    },\n    getOrganization: ()=>({\n            orgCode: v(\"org_code\")\n        }),\n    getPermission: (e)=>{\n        const t = v(\"org_code\");\n        return {\n            isGranted: (v(\"permissions\") || []).some((t)=>t === e),\n            orgCode: t\n        };\n    },\n    getPermissions: ()=>{\n        const e = v(\"org_code\");\n        return {\n            permissions: v(\"permissions\"),\n            orgCode: e\n        };\n    },\n    getStringFlag: (e, t)=>{\n        try {\n            return S(e, t, \"s\").value;\n        } catch (e) {\n            console.error(e);\n        }\n    },\n    getUserOrganizations: (e)=>({\n            orgCodes: ((e)=>{\n                const t = m();\n                return t ? t[e] : null;\n            })(\"org_codes\")\n        }),\n    getUser: E,\n    isAuthenticated: (e)=>Boolean(E())\n});\nconst I = (e)=>\"/\" === e.charAt(e.length - 1) ? e.slice(0, -1) : e;\nfunction x() {\n    return x = Object.assign ? Object.assign.bind() : function(e) {\n        for(var t = 1; t < arguments.length; t++){\n            var r = arguments[t];\n            for(var o in r)Object.prototype.hasOwnProperty.call(r, o) && (e[o] = r[o]);\n        }\n        return e;\n    }, x.apply(this, arguments);\n}\nexports.CreateOrgLink = function({ children: e, orgName: t, ...r }) {\n    return a.default.createElement(\"a\", x({\n        href: `${_.apiPath}/create_org${t ? `?org_name=${t}` : \"\"}`\n    }, r), e);\n}, exports.LoginLink = function({ children: e, orgCode: t, ...r }) {\n    return a.default.createElement(\"a\", x({\n        href: `${_.apiPath}/login${t ? `?org_code=${t}` : \"\"}`\n    }, r), e);\n}, exports.LogoutLink = function({ children: e, ...t }) {\n    return a.default.createElement(\"a\", x({\n        href: `${_.apiPath}/logout`\n    }, t), e);\n}, exports.RegisterLink = function({ children: e, orgCode: t, ...r }) {\n    return a.default.createElement(\"a\", x({\n        href: `${_.apiPath}/register${t ? `?org_code=${t}` : \"\"}`\n    }, r), e);\n}, exports.authMiddleware = function(e) {\n    let t = !1;\n    const r = I(e.nextUrl.href), o = I(_.postLogoutRedirectURL), s = e.cookies.get(\"kinde_token\"), c = r === o;\n    return s && (i.default(JSON.parse(s.value).access_token), t = !0), t || c ? t && c ? NextResponse.redirect(new URL(_.postLoginRedirectURL)) : NextResponse.next() : NextResponse.redirect(new URL(_.postLogoutRedirectURL, e.url));\n}, exports.getKindeServerSession = ()=>y, exports.handleAuth = async function(e, t) {\n    const r = ((e)=>L[e])(t);\n    return r ? await r(e) : new Response(\"This page could not be found.\", {\n        status: 404\n    });\n}; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@kinde-oss+kinde-auth-nextjs@1.8.18_react-dom@18.2.0_react@18.2.0/node_modules/@kinde-oss/kinde-auth-nextjs/dist/server/cjs/index.js\n");

/***/ })

};
;